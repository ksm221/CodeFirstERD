// <auto-generated />
using System;
using CodeFirstFirmaERD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeFirstFirmaERD.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeFirstFirmaERD.Ametinimetused", b =>
                {
                    b.Property<int>("AmetinimetuseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmetinimetuseId"));

                    b.Property<string>("Ametinimetus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AmetisAl")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AmetisKuni")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Osakond")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtseseÜlemuseEesnimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtseseÜlemuseEpost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OtseseÜlemuseKontakttel")
                        .HasColumnType("int");

                    b.Property<string>("OtseseÜlemusePerenimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.HasKey("AmetinimetuseId");

                    b.ToTable("Ametinimetused");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Firma", b =>
                {
                    b.Property<int>("FirmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FirmaId"));

                    b.Property<string>("Aadress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaRegNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Koduleht")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KontaktTel")
                        .HasColumnType("int");

                    b.Property<string>("Kontaktisik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lühinimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nimi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FirmaId");

                    b.ToTable("Firmas");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Haiguslehed", b =>
                {
                    b.Property<int>("HaigusleheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HaigusleheId"));

                    b.Property<int?>("AegunudHaigusepäevi")
                        .HasColumnType("int");

                    b.Property<int?>("AllesolevaidHaigusepäevi")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HaigusleheAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HaigusleheLõpp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HaiguspäeviKokku")
                        .HasColumnType("int");

                    b.Property<int?>("KasutatudHaigusepäevi")
                        .HasColumnType("int");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.Property<bool?>("ÕigusHaiguslehele")
                        .HasColumnType("bit");

                    b.HasKey("HaigusleheId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Haiguslehed");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Harukontor", b =>
                {
                    b.Property<int>("HarukontoriId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HarukontoriId"));

                    b.Property<string>("Aadress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("HarukontoriRegNr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Koduleht")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KontaktEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KontaktTel")
                        .HasColumnType("int");

                    b.Property<string>("Kontaktisik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lühinimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nimi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HarukontoriId");

                    b.HasIndex("FirmaId");

                    b.ToTable("Harukontor");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Laenutu", b =>
                {
                    b.Property<int>("LaenutuseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LaenutuseId"));

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LaenutatavaKaubaNimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LaenutuseAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LaenutuseLõpp")
                        .HasColumnType("datetime2");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.HasKey("LaenutuseId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Laenutu");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Lapsed", b =>
                {
                    b.Property<int>("LapseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LapseId"));

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LapseEesnimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LapsePerenimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LapseSünniaeg")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LapseVanus")
                        .HasColumnType("int");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.HasKey("LapseId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Lapsed");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Ligipääsuload", b =>
                {
                    b.Property<int>("LigipääsuloaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LigipääsuloaId"));

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LigipääsuAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LigipääsuLõpp")
                        .HasColumnType("datetime2");

                    b.Property<string>("LigipääsuTase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("LigipääsuÕigus")
                        .HasColumnType("bit");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.HasKey("LigipääsuloaId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Ligipääsuload");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Puhkused", b =>
                {
                    b.Property<int>("PuhkuseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PuhkuseId"));

                    b.Property<int?>("AegunudPuhkusepäevad")
                        .HasColumnType("int");

                    b.Property<int?>("AllesolevadPäevad")
                        .HasColumnType("int");

                    b.Property<int?>("KasutatudPäevad")
                        .HasColumnType("int");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PuhkuseAlgus")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PuhkuseLõpp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PuhkusePäevi")
                        .HasColumnType("int");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.HasKey("PuhkuseId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Puhkused");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Tervisekontroll", b =>
                {
                    b.Property<int>("TervisekontrolliId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TervisekontrolliId"));

                    b.Property<DateTime?>("EelmiseTervisekontrolliKp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TervisekontrolliVajadus")
                        .HasColumnType("bit");

                    b.Property<int>("TöötajaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UueTervisekontrolliKp")
                        .HasColumnType("datetime2");

                    b.HasKey("TervisekontrolliId");

                    b.HasIndex("TöötajaId");

                    b.ToTable("Tervisekontroll");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Töötaja", b =>
                {
                    b.Property<int>("TöötajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TöötajaId"));

                    b.Property<int>("AmetinimetuseId")
                        .HasColumnType("int");

                    b.Property<string>("Eesnimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<int>("HarukontoriId")
                        .HasColumnType("int");

                    b.Property<int?>("Isikukood")
                        .HasColumnType("int");

                    b.Property<string>("Kommentaar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kontaktaadress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perekonnanimi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TöölAl")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TöölKuni")
                        .HasColumnType("datetime2");

                    b.HasKey("TöötajaId");

                    b.HasIndex("AmetinimetuseId");

                    b.HasIndex("FirmaId");

                    b.HasIndex("HarukontoriId");

                    b.ToTable("Töötaja");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Haiguslehed", b =>
                {
                    b.HasOne("CodeFirstFirmaERD.Töötaja", "Töötaja")
                        .WithMany("Haigusleheds")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Harukontor", b =>
                {
                    b.HasOne("CodeFirstFirmaERD.Firma", "Firma")
                        .WithMany("Harukontors")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Laenutu", b =>
                {
                    b.HasOne("CodeFirstFirmaERD.Töötaja", "Töötaja")
                        .WithMany("Laenutus")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Lapsed", b =>
                {
                    b.HasOne("CodeFirstFirmaERD.Töötaja", "Töötaja")
                        .WithMany("Lapseds")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Ligipääsuload", b =>
                {
                    b.HasOne("CodeFirstFirmaERD.Töötaja", "Töötaja")
                        .WithMany("Ligipääsuloads")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Puhkused", b =>
                {
                    b.HasOne("CodeFirstFirmaERD.Töötaja", "Töötaja")
                        .WithMany("Puhkuseds")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Tervisekontroll", b =>
                {
                    b.HasOne("CodeFirstFirmaERD.Töötaja", "Töötaja")
                        .WithMany("Tervisekontrolls")
                        .HasForeignKey("TöötajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Töötaja");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Töötaja", b =>
                {
                    b.HasOne("CodeFirstFirmaERD.Ametinimetused", "Ametinimetuse")
                        .WithMany("Töötajas")
                        .HasForeignKey("AmetinimetuseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirstFirmaERD.Firma", "Firma")
                        .WithMany("Töötajas")
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeFirstFirmaERD.Harukontor", "Harukontori")
                        .WithMany("Töötajas")
                        .HasForeignKey("HarukontoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ametinimetuse");

                    b.Navigation("Firma");

                    b.Navigation("Harukontori");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Ametinimetused", b =>
                {
                    b.Navigation("Töötajas");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Firma", b =>
                {
                    b.Navigation("Harukontors");

                    b.Navigation("Töötajas");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Harukontor", b =>
                {
                    b.Navigation("Töötajas");
                });

            modelBuilder.Entity("CodeFirstFirmaERD.Töötaja", b =>
                {
                    b.Navigation("Haigusleheds");

                    b.Navigation("Laenutus");

                    b.Navigation("Lapseds");

                    b.Navigation("Ligipääsuloads");

                    b.Navigation("Puhkuseds");

                    b.Navigation("Tervisekontrolls");
                });
#pragma warning restore 612, 618
        }
    }
}
